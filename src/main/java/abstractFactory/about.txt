Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.

Steps:

1 - Explicitly declare interfaces for each distinct item in the item family.
2 - Declare Abstract Factory - An Interface with a list of creation methods for item family.


PROS:
>   You can be sure that the products youâ€™re getting from a factory are compatible with each other.
>   You avoid tight coupling between concrete products and client code.
>   Single Responsibility Principle. You can extract the product creation code into one place, making the code easier to support.
>   Open/Closed Principle. You can introduce new variants of products without breaking existing client code.

CONS:
> The code may become more complicated than it should be, since a lot of new interfaces and classes are introduced along with the pattern.